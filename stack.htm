<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stack - Data Structures</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <script src="./assets/js/script.js" defer></script>
</head>
<body>

<!-- Navigation Bar -->
<nav class="navbar navbar-expand-lg navbar-light bg-primary">
    <div class="container-fluid">
        <!-- Home Button -->
        <a class="navbar-brand text-white" href="index.htm">Home</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <!-- Links on the right -->
        <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link text-white" href="array.htm">Array</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="linked_list.htm">Linked List</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="stack.htm">Stacks</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="queue.htm">Queue</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="trees.htm">Trees</a>
                </li>
            </ul>
        </div>
    </div>
</nav>

<!-- Main Content Area -->
<div class="container mt-5 text-center">
    <h1>Stack</h1>
    <p>A <strong>stack</strong> is a linear data structure that follows the Last In, First Out (LIFO) principle. It allows adding and removing elements only from the top of the stack, making it useful for scenarios such as recursion, backtracking, and undo operations.</p>
    <img src="./assets/images/stack.webp" alt="Stack Diagram" class="img-fluid mt-4">
</div>

<!-- Why Stacks are Important -->
<div class="container mt-5 text-center">
    <h2>Why Use Stacks?</h2>
    <p>Stacks are widely used in computer science for the following purposes:</p>
    <ul class="list-unstyled">
        <li>1. Managing function calls in recursion.</li>
        <li>2. Implementing undo functionality in applications.</li>
        <li>3. Parsing expressions and syntax in compilers.</li>
        <li>4. Evaluating postfix expressions.</li>
    </ul>
</div>

<!-- Code Examples -->
<div class="container mt-5">
    <h2 class="text-center">Code Examples</h2>
    <ul class="list-unstyled">
        <li><code>1. // How to create a stack</code>
            <pre><code>class Stack {
    constructor() {
        this.items = [];
    }

    push(element) {
        this.items.push(element);
    }

    pop() {
        if (this.isEmpty()) {
            return "Underflow";
        }
        return this.items.pop();
    }

    peek() {
        if (this.isEmpty()) {
            return "No elements in Stack";
        }
        return this.items[this.items.length - 1];
    }

    isEmpty() {
        return this.items.length === 0;
    }
}</code></pre>
        </li>
        <li><code>2. // How to push an element onto a stack</code>
            <pre><code>const stack = new Stack();
stack.push(10);
stack.push(20);
console.log(stack.peek()); // Outputs 20</code></pre>
        </li>
        <li><code>3. // How to pop an element from a stack</code>
            <pre><code>console.log(stack.pop()); // Removes and outputs 20</code></pre>
        </li>
        <li><code>4. // Check if the stack is empty</code>
            <pre><code>console.log(stack.isEmpty()); // Outputs false</code></pre>
        </li>
    </ul>
</div>

<!-- Code Editor and Output Section -->
<div class="container mt-5">
    <div class="row">
        <!-- Code Editor -->
        <div class="col-md-6">
            <h2>Write Your Code</h2>
            <textarea id="code-editor" class="form-control" rows="10" placeholder="Write your JavaScript code here..."></textarea>
            <button id="run-code" class="btn btn-primary mt-3">Run Code</button>
        </div>
        <!-- Output Section -->
        <div class="col-md-6">
            <h2>Output</h2>
            <div id="output" class="border p-3 bg-light" style="min-height: 200px;">Your output will appear here...</div>
        </div>
    </div>
</div>

<!-- Footer -->
<footer class="bg-primary text-center text-lg-start mt-5">
    <div class="container p-4">
        <p class="text-center text-white">&copy; 2024 Adnan Bhuiyan. All rights reserved.</p>
    </div>
</footer>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
